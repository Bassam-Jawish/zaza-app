// Mocks generated by Mockito 5.4.4 from annotations
// in zaza_app/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i18;
import 'dart:typed_data' as _i20;

import 'package:http/http.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i19;
import 'package:retrofit/retrofit.dart' as _i3;
import 'package:zaza_app/core/network/network_info.dart' as _i17;
import 'package:zaza_app/core/resources/data_state.dart' as _i2;
import 'package:zaza_app/core/usecases/usecase.dart' as _i15;
import 'package:zaza_app/features/authentication/data/data_sources/remote/auth_api_service.dart'
    as _i8;
import 'package:zaza_app/features/authentication/data/models/user_model.dart'
    as _i9;
import 'package:zaza_app/features/authentication/domain/entities/user.dart'
    as _i7;
import 'package:zaza_app/features/authentication/domain/repository/auth_repo.dart'
    as _i4;
import 'package:zaza_app/features/authentication/domain/usecases/delete_account_usecase.dart'
    as _i16;
import 'package:zaza_app/features/authentication/domain/usecases/forgot_password_usecase.dart'
    as _i11;
import 'package:zaza_app/features/authentication/domain/usecases/login_usecase.dart'
    as _i10;
import 'package:zaza_app/features/authentication/domain/usecases/logout_usecase.dart'
    as _i14;
import 'package:zaza_app/features/authentication/domain/usecases/reset_password_usecase.dart'
    as _i13;
import 'package:zaza_app/features/authentication/domain/usecases/validate_reset_password_usecase.dart'
    as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataState_0<T> extends _i1.SmartFake implements _i2.DataState<T> {
  _FakeDataState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpResponse_1<T> extends _i1.SmartFake
    implements _i3.HttpResponse<T> {
  _FakeHttpResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthRepository_2 extends _i1.SmartFake
    implements _i4.AuthRepository {
  _FakeAuthRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_3 extends _i1.SmartFake implements _i5.Response {
  _FakeResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_4 extends _i1.SmartFake
    implements _i5.StreamedResponse {
  _FakeStreamedResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i4.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.DataState<_i7.UserInfoEntity>> login(
    String? userName,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            userName,
            password,
          ],
        ),
        returnValue: _i6.Future<_i2.DataState<_i7.UserInfoEntity>>.value(
            _FakeDataState_0<_i7.UserInfoEntity>(
          this,
          Invocation.method(
            #login,
            [
              userName,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i2.DataState<_i7.UserInfoEntity>>);

  @override
  _i6.Future<_i2.DataState<void>> forgotPassword(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [email],
        ),
        returnValue:
            _i6.Future<_i2.DataState<void>>.value(_FakeDataState_0<void>(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
      ) as _i6.Future<_i2.DataState<void>>);

  @override
  _i6.Future<_i2.DataState<void>> validateResetPassword(
    String? email,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateResetPassword,
          [
            email,
            token,
          ],
        ),
        returnValue:
            _i6.Future<_i2.DataState<void>>.value(_FakeDataState_0<void>(
          this,
          Invocation.method(
            #validateResetPassword,
            [
              email,
              token,
            ],
          ),
        )),
      ) as _i6.Future<_i2.DataState<void>>);

  @override
  _i6.Future<_i2.DataState<void>> resetPassword(
    String? email,
    String? token,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [
            email,
            token,
            password,
          ],
        ),
        returnValue:
            _i6.Future<_i2.DataState<void>>.value(_FakeDataState_0<void>(
          this,
          Invocation.method(
            #resetPassword,
            [
              email,
              token,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i2.DataState<void>>);

  @override
  _i6.Future<_i2.DataState<void>> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue:
            _i6.Future<_i2.DataState<void>>.value(_FakeDataState_0<void>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i6.Future<_i2.DataState<void>>);

  @override
  _i6.Future<_i2.DataState<void>> deleteAccount() => (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [],
        ),
        returnValue:
            _i6.Future<_i2.DataState<void>>.value(_FakeDataState_0<void>(
          this,
          Invocation.method(
            #deleteAccount,
            [],
          ),
        )),
      ) as _i6.Future<_i2.DataState<void>>);
}

/// A class which mocks [AuthApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthApiService extends _i1.Mock implements _i8.AuthApiService {
  MockAuthApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.HttpResponse<_i9.UserInfoModel>> login(
    String? userName,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            userName,
            password,
          ],
        ),
        returnValue: _i6.Future<_i3.HttpResponse<_i9.UserInfoModel>>.value(
            _FakeHttpResponse_1<_i9.UserInfoModel>(
          this,
          Invocation.method(
            #login,
            [
              userName,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i3.HttpResponse<_i9.UserInfoModel>>);

  @override
  _i6.Future<_i3.HttpResponse<void>> forgotPassword(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [email],
        ),
        returnValue:
            _i6.Future<_i3.HttpResponse<void>>.value(_FakeHttpResponse_1<void>(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
      ) as _i6.Future<_i3.HttpResponse<void>>);

  @override
  _i6.Future<_i3.HttpResponse<void>> validateResetPassword(
    String? email,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateResetPassword,
          [
            email,
            token,
          ],
        ),
        returnValue:
            _i6.Future<_i3.HttpResponse<void>>.value(_FakeHttpResponse_1<void>(
          this,
          Invocation.method(
            #validateResetPassword,
            [
              email,
              token,
            ],
          ),
        )),
      ) as _i6.Future<_i3.HttpResponse<void>>);

  @override
  _i6.Future<_i3.HttpResponse<void>> resetPassword(
    String? email,
    String? token,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [
            email,
            token,
            password,
          ],
        ),
        returnValue:
            _i6.Future<_i3.HttpResponse<void>>.value(_FakeHttpResponse_1<void>(
          this,
          Invocation.method(
            #resetPassword,
            [
              email,
              token,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i3.HttpResponse<void>>);

  @override
  _i6.Future<_i3.HttpResponse<void>> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue:
            _i6.Future<_i3.HttpResponse<void>>.value(_FakeHttpResponse_1<void>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i6.Future<_i3.HttpResponse<void>>);

  @override
  _i6.Future<_i3.HttpResponse<void>> deleteAccount() => (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [],
        ),
        returnValue:
            _i6.Future<_i3.HttpResponse<void>>.value(_FakeHttpResponse_1<void>(
          this,
          Invocation.method(
            #deleteAccount,
            [],
          ),
        )),
      ) as _i6.Future<_i3.HttpResponse<void>>);
}

/// A class which mocks [LoginUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginUseCase extends _i1.Mock implements _i10.LoginUseCase {
  MockLoginUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_2(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i4.AuthRepository);

  @override
  _i6.Future<_i2.DataState<_i7.UserInfoEntity>> call(
          {_i10.LoginParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue: _i6.Future<_i2.DataState<_i7.UserInfoEntity>>.value(
            _FakeDataState_0<_i7.UserInfoEntity>(
          this,
          Invocation.method(
            #call,
            [],
            {#params: params},
          ),
        )),
      ) as _i6.Future<_i2.DataState<_i7.UserInfoEntity>>);
}

/// A class which mocks [ForgotPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgotPasswordUseCase extends _i1.Mock
    implements _i11.ForgotPasswordUseCase {
  MockForgotPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_2(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i4.AuthRepository);

  @override
  _i6.Future<_i2.DataState<void>> call({_i11.ForgotPasswordParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue:
            _i6.Future<_i2.DataState<void>>.value(_FakeDataState_0<void>(
          this,
          Invocation.method(
            #call,
            [],
            {#params: params},
          ),
        )),
      ) as _i6.Future<_i2.DataState<void>>);
}

/// A class which mocks [ValidateResetPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockValidateResetPasswordUseCase extends _i1.Mock
    implements _i12.ValidateResetPasswordUseCase {
  MockValidateResetPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_2(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i4.AuthRepository);

  @override
  _i6.Future<_i2.DataState<void>> call(
          {_i12.ValidateResetPasswordParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue:
            _i6.Future<_i2.DataState<void>>.value(_FakeDataState_0<void>(
          this,
          Invocation.method(
            #call,
            [],
            {#params: params},
          ),
        )),
      ) as _i6.Future<_i2.DataState<void>>);
}

/// A class which mocks [ResetPasswordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockResetPasswordUseCase extends _i1.Mock
    implements _i13.ResetPasswordUseCase {
  MockResetPasswordUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_2(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i4.AuthRepository);

  @override
  _i6.Future<_i2.DataState<void>> call({_i13.ResetPasswordParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue:
            _i6.Future<_i2.DataState<void>>.value(_FakeDataState_0<void>(
          this,
          Invocation.method(
            #call,
            [],
            {#params: params},
          ),
        )),
      ) as _i6.Future<_i2.DataState<void>>);
}

/// A class which mocks [LogoutUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogoutUseCase extends _i1.Mock implements _i14.LogoutUseCase {
  MockLogoutUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_2(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i4.AuthRepository);

  @override
  _i6.Future<_i2.DataState<void>> call({_i15.NoParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue:
            _i6.Future<_i2.DataState<void>>.value(_FakeDataState_0<void>(
          this,
          Invocation.method(
            #call,
            [],
            {#params: params},
          ),
        )),
      ) as _i6.Future<_i2.DataState<void>>);
}

/// A class which mocks [DeleteAccountUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteAccountUseCase extends _i1.Mock
    implements _i16.DeleteAccountUseCase {
  MockDeleteAccountUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_2(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i4.AuthRepository);

  @override
  _i6.Future<_i2.DataState<void>> call({_i15.NoParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue:
            _i6.Future<_i2.DataState<void>>.value(_FakeDataState_0<void>(
          this,
          Invocation.method(
            #call,
            [],
            {#params: params},
          ),
        )),
      ) as _i6.Future<_i2.DataState<void>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i17.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i5.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i5.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i5.Response>);

  @override
  _i6.Future<_i5.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i5.Response>);

  @override
  _i6.Future<_i5.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i5.Response>);

  @override
  _i6.Future<_i5.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i5.Response>);

  @override
  _i6.Future<_i5.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i5.Response>);

  @override
  _i6.Future<_i5.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i5.Response>);

  @override
  _i6.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<_i20.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i20.Uint8List>.value(_i20.Uint8List(0)),
      ) as _i6.Future<_i20.Uint8List>);

  @override
  _i6.Future<_i5.StreamedResponse> send(_i5.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i6.Future<_i5.StreamedResponse>.value(_FakeStreamedResponse_4(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i6.Future<_i5.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
